// Create new branch
git switch -C feature/change-password

 result:
    *   119c158 (HEAD -> feature/change-password, master) Merge branch 'bugfix/form'

// Modify file
echo hello > change-password.txt

// commit file
git add .
git commit -m "Build the change password form"

git log --oneline --all --graph
    * 0c0d8e4 (HEAD -> feature/change-password) Update change-password.txt
    * 7824e1c (master) Update objectives.txt

// Switch back to master
git switch master
code change-password.txt
git add .
git commit -m "change-password.txt"


//Check branch

git log --oneline --all --graph

    * eedc07c (HEAD -> master) change-password.txt
    | * 0c0d8e4 (feature/change-password) Update change-password.txt
    |/
    * 7824e1c Update objectives.txt
(要兩個branch都有新的commit才會diverge)


// Use 3 way merge
git merge feature/change-password

// If run into conflict of code
1) Open conflict file
2) Click "Accept Current Change"
or 3) Manually edit and merge changes

4) git add change-password.txt

Will turn this:
Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   change-password.txt

Into this:        
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:
        modified:   change-password.txt


5) git commit
then
6) git log --oneline --all --graph

*   9418574 (HEAD -> master) Merge branch 'feature/change-password' OK
|\
| * d7ba10f (feature/change-password) change-password.txt again
| * 0c0d8e4 Update change-password.txt
* | eedc07c change-password.txt
|/
